{"version":3,"sources":["assets/images/waltco-head-right.png","serviceWorker.js","components/SiteNav.js","components/Header.js","pages/Home.js","pages/Result.js","pages/pageOne.js","pages/pageTwo.js","components/InputRange.js","pages/pageThree.js","App.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","SiteNav","Nav","styled","nav","to","StyledHeader","header","Header","props","src","waltcohead","alt","Home","className","Result","calc","parseInt","param1","param2","param3","param4","StyledDiv","div","PageOne","formGroupStyle","Form","style","maxWidth","FormGroup","Label","for","Input","type","name","id","placeholder","Button","PageTwo","InputRange","useState","number","value","setValue","borderRadius","padding","margin","textAlign","fontSize","textTransform","min","max","onChange","e","target","setParam","handleChange","InputWrapper","setParam1","setParam2","setParam3","setParam4","param5","setParam5","App","render","TransitionGroup","CSSTransition","key","timeout","classNames","path","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.205b4238.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/waltco-head-right.7f54073b.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst SiteNav = () => {\n  const Nav = styled.nav`\n    z-index: 400;\n    width: 100%;\n    padding: 0px;\n    position: fixed;\n    background: #000;\n    bottom: 0;\n    left: 0;\n    text-align: center;\n    ul {\n      padding: 4px;\n      margin: 0;\n      li {\n        text-transform: uppercase;\n        display: inline;\n        padding: 0;\n        margin-right: 10px;\n        a {\n          font-weight: 700;\n          color: #fff;\n        }\n      }\n    }\n  `;\n\n  return (\n    <Nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/pageone\">one</Link>\n        </li>\n        <li>\n          <Link to=\"/pagetwo\">two</Link>\n        </li>\n        <li>\n          <Link to=\"/pagethree\">three</Link>\n        </li>\n        <li>\n          <Link to=\"/result\">result</Link>\n        </li>\n      </ul>\n    </Nav>\n  );\n};\nexport default SiteNav;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport waltcohead from \"../assets/images/waltco-head-right.png\";\nconst StyledHeader = styled.header`\n  display: flex;\n  div {\n    padding-top: 2rem;\n    margin-left: 2rem;\n    h1 {\n      font-size: 65px;\n      line-height: 50px;\n      color: #fff;\n    }\n    h1:nth-child(odd) {\n      color: #d52b1f;\n    }\n  }\n\n  img {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 40vw;\n    max-width: 450px;\n    z-index: 50;\n  }\n`;\nconst Header = props => {\n  return (\n    <StyledHeader>\n      <div>\n        <h1>HICONNECT</h1>\n        <h1>ROICALCULATOR</h1>\n      </div>\n      <img src={waltcohead} alt=\"waltco-logo\" />\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Home = props => {\n  return (\n    <div className=\"page-transition\">\n      <h1>start/home</h1>\n      <p>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Itaque, atque\n        exercitationem! Tenetur iure harum eum voluptas saepe, accusamus\n        repellendus quia voluptates. Tempore, optio distinctio. Aliquid\n        laboriosam adipisci incidunt distinctio sint suscipit impedit fugit sit!\n        Neque praesentium maiores necessitatibus doloremque odio corrupti\n        adipisci similique eum quas. Adipisci dolore hic voluptatem voluptas\n        commodi molestias sunt animi asperiores sapiente expedita, non\n        dignissimos totam, nesciunt nostrum tempore et id repellat ipsa debitis\n        ipsum eos quos illum. Consectetur ex a cupiditate eos nisi. Dignissimos\n        adipisci optio labore fuga autem accusantium. Architecto laborum libero,\n        atque commodi veniam harum aut dolore! Dolorem doloribus, voluptates\n        amet non cumque magni ut incidunt ratione facere suscipit ullam aliquid\n        harum mollitia iusto voluptatibus eligendi sequi, optio beatae itaque\n        quas ducimus cum eius accusamus. Nesciunt, officiis minima culpa ratione\n        porro est aliquam neque cum fugit aspernatur sed natus rerum obcaecati,\n        rem officia harum nobis cumque nisi suscipit. Labore excepturi unde ad\n        odio, sequi, suscipit, consectetur asperiores at reiciendis earum\n        voluptatibus esse dignissimos blanditiis?\n      </p>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Result = props => {\n  const calc =\n    parseInt(props.param1) +\n    parseInt(props.param2) +\n    parseInt(props.param3) +\n    parseInt(props.param4);\n\n  const StyledDiv = styled.div`\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 80vh;\n    h2 {\n      font-size: 120px;\n      color: #d52b1f;\n      display: inline-block;\n    }\n  `;\n  return (\n    <StyledDiv className=\"page-transition\">\n      <div>\n        <h2>{calc}%</h2>\n      </div>\n    </StyledDiv>\n  );\n};\n\nexport default Result;\n","import React from \"react\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\n\nexport default function PageOne() {\n  const formStyle = {\n    // margin: \"-8px\",\n    maxWidth: \"540px\"\n  };\n  const formGroupStyle = {\n    // margin: \"8px\"\n  };\n  return (\n    <div className=\"page-transition\">\n      <h1>Basic Info</h1>\n      <Form style={formStyle} className=\"input-wsrapper\">\n        <FormGroup style={formGroupStyle}>\n          <Label for=\"company-name\">Company name</Label>\n          <Input\n            type=\"text\"\n            name=\"company-name\"\n            id=\"company-name\"\n            placeholder=\"...\"\n          />\n        </FormGroup>\n        <FormGroup style={formGroupStyle}>\n          <Label for=\"fleet-size\">Fleet size</Label>\n          <Input\n            type=\"number\"\n            name=\"fleet-size\"\n            id=\"fleet-size\"\n            placeholder=\"...\"\n          />\n        </FormGroup>\n        <FormGroup style={formGroupStyle}>\n          <Label for=\"subscription-package\">Subscription package</Label>\n          <Input\n            type=\"text\"\n            name=\"subscription-package\"\n            id=\"subscription-package\"\n            placeholder=\"...\"\n          />\n        </FormGroup>\n        <FormGroup style={formGroupStyle}>\n          <Label for=\"subscription-length\">Subscription length</Label>\n          <Input\n            type=\"text\"\n            name=\"subscription-length\"\n            id=\"subscription-length\"\n            placeholder=\"...\"\n          />\n        </FormGroup>\n        <Button>NEXT PAGE</Button>\n      </Form>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst PageTwo = () => {\n  return (\n    <div className=\"page-transition\">\n      <h1>PageTwo</h1>\n    </div>\n  );\n};\n\nexport default PageTwo;\n","import React, { useState } from \"react\";\n\nconst InputRange = props => {\n  const [value, setValue] = useState(props.number);\n\n  const styledDiv = {\n    borderRadius: \"4px\",\n    padding: \"2rem\",\n    margin: \"1em\",\n    textAlign: \"center\"\n  };\n\n  const styledHeader = {\n    fontSize: \"42px\",\n    textTransform: \"uppercase\"\n  };\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    props.setParam(e.target.value);\n  };\n  return (\n    <div style={styledDiv}>\n      <h3 style={styledHeader}>{props.name}</h3>\n      <input\n        type=\"range\"\n        className=\"range-slider\"\n        min={0}\n        max={100}\n        value={value}\n        onChange={e => handleChange(e)}\n      />\n      <span className=\"value\">{value}</span>\n    </div>\n  );\n};\n\nexport default InputRange;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport InputRange from \"../components/InputRange\";\nimport { Link } from \"react-router-dom\";\n\nconst InputWrapper = styled.div``;\nconst StyledDiv = styled.div``;\n\nconst PageTwo = props => {\n  return (\n    <StyledDiv className=\"page-transition\">\n      <h1>Expected Improvements using HiConnect</h1>\n      <InputWrapper className=\"input-wrapper\">\n        <InputRange\n          name=\"Reduction in unplanned downtime\"\n          number={props.param1}\n          setParam={props.setParam1}\n        />\n        <InputRange\n          name=\"Reduction in battery replacement\"\n          number={props.param2}\n          setParam={props.setParam2}\n        />\n        <InputRange\n          name=\"Reduction in asset location time\"\n          number={props.param3}\n          setParam={props.setParam3}\n        />\n        <InputRange\n          name=\"Reduction in dwell time\"\n          number={props.param4}\n          setParam={props.setParam4}\n        />\n        <InputRange\n          name=\"Increase in lifecycle (Service & Asset Utilization)\"\n          number={props.param5}\n          setParam={props.setParam5}\n        />\n      </InputWrapper>\n    </StyledDiv>\n  );\n};\n\nexport default PageTwo;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// components\nimport SiteNav from \"./components/SiteNav\";\nimport Header from \"./components/Header\";\n\n// views\nimport Home from \"./pages/Home\";\nimport Result from \"./pages/Result\";\nimport PageOne from \"./pages/pageOne\";\nimport PageTwo from \"./pages/pageTwo\";\nimport PageThree from \"./pages/pageThree\";\n\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nconst App = () => {\n  // Expected Improvements using HiConnect\n  const [param1, setParam1] = useState(65);\n  const [param2, setParam2] = useState(23);\n  const [param3, setParam3] = useState(90);\n  const [param4, setParam4] = useState(30);\n  const [param5, setParam5] = useState(55);\n  return (\n    <Router>\n      <div className=\"App\">\n        sw test\n        <Header />\n        <Route\n          render={({ location }) => (\n            <TransitionGroup>\n              <CSSTransition key={location.key} timeout={700} classNames=\"fade\">\n                <Switch location={location}>\n                  <Route path=\"/pageone\">\n                    <PageOne />\n                  </Route>\n                  <Route path=\"/pagetwo\">\n                    <PageTwo />\n                  </Route>\n                  <Route path=\"/pagethree\">\n                    <PageThree\n                      param1={param1}\n                      param2={param2}\n                      param3={param3}\n                      param4={param4}\n                      param5={param5}\n                      setParam1={setParam1}\n                      setParam2={setParam2}\n                      setParam3={setParam3}\n                      setParam4={setParam4}\n                      setParam5={setParam5}\n                    />\n                  </Route>\n                  <Route path=\"/result\">\n                    <Result\n                      param1={param1}\n                      param2={param2}\n                      param3={param3}\n                      param4={param4}\n                      param5={param5}\n                    />\n                  </Route>\n                  <Route path=\"/\">\n                    <Home />\n                  </Route>\n                </Switch>\n              </CSSTransition>\n            </TransitionGroup>\n          )}\n        />\n        <SiteNav />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}